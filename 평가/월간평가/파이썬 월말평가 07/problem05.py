'''
주어진 리스트에서 중복된 요소를 제거하여 리스트로 반환하는 remove_duplicates
함수를 완성하시오.

주어지는 리스트는 빈 리스트, 숫자만 있는 리스트, 문자만 있는 리스트, 숫자와 문자가
혼합된 리스트로 구성되어 있다.

반환되는 리스트는 정렬하지 않아도 된다.
Python 내장 함수 set 사용시 감점
'''
############## 주의 ##############
# 입력을 받기위한 input 함수는 절대 사용하지 않습니다.
# 내장 함수 set을 사용하지 않습니다.
def remove_duplicates(lst):
    new_dic = {} #새로운 딕셔너리 생성 (딕셔너리는 중복이 없기 떄문에)

    for i in lst:
        new_dic[i] = 0 # 모든 딕셔너리에 밸류 0 할당
    
    new_lst= [] # 키를 다시 담을 리스트 생성

    new_dic.keys() # 키 추출
    for j in new_dic.keys():
        new_lst.append(j) # 키를 리스트에 할당

    return new_lst

   

            
            
    

    # 여기에 코드를 작성하여 함수를 완성합니다.


# 추가 테스트를 위한 코드 작성 가능
# 예) print(함수명(인자))

#####################################################
# 아래 코드를 삭제하는 경우 
# 모든 책임은 삭제한 본인에게 있습니다. 

print(remove_duplicates([4, 5, 6, 4, 3, 2, 1, 2, 3]))  # [4, 5, 6, 3, 2, 1]
print(remove_duplicates(['a', 'b', 'c', 'a', 'd', 'b']))  # ['a', 'b', 'c', 'd']
print(remove_duplicates([4, 5, 'a', 4, 'b', 2, 'a', 3, 2, 3]))  # [4, 5, 'a', 'b', 2, 3]